#!/usr/bin/env bash

set -euo pipefail

###############################################################################
# Root README generator for ConcourseGPT
# Generates an overview README that summarizes all documented pipelines
###############################################################################

# Source required utilities
SCRIPT_DIR="$(cd "$(dirname "${BASH_SOURCE[0]}")/.." && pwd)"
source "${SCRIPT_DIR}/utils/formatting.sh"
source "${SCRIPT_DIR}/utils/llm.sh"
source "${SCRIPT_DIR}/utils/helpers.sh"

# Generate root README
# No args - works with docs/ directory
generate_root_readme() {
    print_progress "Finding pipelines" "..."
    
    # Find all pipeline directories
    local pipeline_dirs=()
    while IFS= read -r dirpath; do
        pipeline_dirs+=("$(basename "$dirpath")")
    done < <(find docs -mindepth 1 -maxdepth 1 -type d | sort)

    if [ ${#pipeline_dirs[@]} -eq 0 ]; then
        print_progress "Finding pipelines" "skip"
        echo "No pipeline directories found under docs/. Skipping README generation."
        return 0
    fi

    print_progress "Finding pipelines" "success"
    printf "      Found: %s\n" "${pipeline_dirs[*]}"

    print_progress "Generating README" "..."

    # Build the prompt
    local prompt="We have a documentation repository with these pipeline directories:
$(printf '%s\n' "${pipeline_dirs[@]}")

Write a concise, direct README in Markdown for the root of this repository. 
Use ONLY relative paths like \`docs/bbr-backup/\` and avoid absolute paths. 
Begin with a header like '# Repository Overview' or similar. 
Explain each pipeline's overall purpose and how they fit into an automation or platform workflow. 
Reference the folder structure under docs/ for each pipeline. 
Offer a short best-practice or recommendation for how to navigate these docs.

IMPORTANT: 
 - Do not add disclaimers or meta statements like 'Here is an example:' or 'Here is the solution:'. 
 - Do not include absolute paths. 
 - Simply provide the final README in Markdown, with headings, bullet points, or code blocks as needed."

    local response
    if ! response=$(call_llm_api_with_validation "$prompt"); then
        print_progress "Generating README" "error"
        return 1
    fi

    local out_file="docs/README.md"
    {
        echo "$response"
        echo
        echo "<!-- Generated by ConcourseGPT -->"
    } > "$out_file"

    print_progress "Generating README" "success"
    echo "      Output: $out_file"
}

# If this script is run directly, show usage
if [[ "${BASH_SOURCE[0]}" == "${0}" ]]; then
    echo "This script is meant to be sourced and used as part of ConcourseGPT"
    exit 1
fi
